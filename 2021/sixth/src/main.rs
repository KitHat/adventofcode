fn main() {
    println!("test {}", bruteforce(source(), 256));
}

fn bruteforce(input: Vec<i64>, days: i64) -> i64 {
    let mut map_to_add: Vec<i64> = vec![0; 7];
    let mut map_calc: Vec<i64> = input.into_iter().fold(vec![0; 7], |mut acc, next| {
        acc[next as usize] += 1;
        acc
    });
    for i in 1..days+1 {
        let num = map_calc[(i%7) as usize];
        map_to_add[((i+2)%7) as usize] = num;
        map_calc[(i%7) as usize] += map_to_add[(i%7) as usize];
        map_to_add[(i%7) as usize] = 0;
    }

    map_calc.iter().sum::<i64>() + map_to_add[((days+1)%7) as usize]
}

fn test() -> Vec<i64> {
    vec![3,4,3,1,2]
}

fn source() -> Vec<i64> {
    vec![2,3,1,3,4,4,1,5,2,3,1,1,4,5,5,3,5,5,4,1,2,1,1,1,1,1,1,4,1,1,1,4,1,3,1,4,1,1,4,1,3,4,5,1,1,5,3,4,3,4,1,5,1,3,1,1,1,3,5,3,2,3,1,5,2,2,1,1,4,1,1,2,2,2,2,3,2,1,2,5,4,1,1,1,5,5,3,1,3,2,2,2,5,1,5,2,4,1,1,3,3,5,2,3,1,2,1,5,1,4,3,5,2,1,5,3,4,4,5,3,1,2,4,3,4,1,3,1,1,2,5,4,3,5,3,2,1,4,1,4,4,2,3,1,1,2,1,1,3,3,3,1,1,2,2,1,1,1,5,1,5,1,4,5,1,5,2,4,3,1,1,3,2,2,1,4,3,1,1,1,3,3,3,4,5,2,3,3,1,3,1,4,1,1,1,2,5,1,4,1,2,4,5,4,1,5,1,5,5,1,5,5,2,5,5,1,4,5,1,1,3,2,5,5,5,4,3,2,5,4,1,1,2,4,4,1,1,1,3,2,1,1,2,1,2,2,3,4,5,4,1,4,5,1,1,5,5,1,4,1,4,4,1,5,3,1,4,3,5,3,1,3,1,4,2,4,5,1,4,1,2,4,1,2,5,1,1,5,1,1,3,1,1,2,3,4,2,4,3,1]
}
